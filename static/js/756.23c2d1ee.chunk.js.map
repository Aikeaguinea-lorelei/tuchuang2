{"version":3,"file":"static/js/756.23c2d1ee.chunk.js","mappings":"8NAMMA,EAAQC,EAAAA,GAAAA,IAAD,6JAOPC,EAAMD,EAAAA,GAAAA,GAAD,gDA4HX,UAxHY,WACV,IAAOE,GAAWC,EAAAA,EAAAA,KAAXD,UACDE,GAAQC,EAAAA,EAAAA,MAkCd,OACE,UAACN,EAAD,YACA,SAACE,EAAD,4BACA,UAAC,IAAD,CACEK,KAAK,QACLC,SAAU,CACRC,KAAM,GAERC,WAAY,CACVD,KAAM,IAERE,cAAe,CACbC,UAAU,GAEZC,SA9Ca,SAACC,GAChBC,QAAQC,IAAI,WAAYF,GACxBX,EAAUc,YAAYH,EAAOI,UAC7Bf,EAAUgB,YAAYL,EAAOM,UAC7BjB,EAAUkB,WACPC,MAAK,WACJP,QAAQC,IAAI,2DACZX,EAAQkB,KAAK,IACd,IAAEC,OAAM,WACPT,QAAQC,IAAI,2BACb,GACJ,EAoCGS,eAlCmB,SAACC,GACtBX,QAAQC,IAAI,UAAWU,EACxB,EAiCGC,aAAa,MAbf,WAeE,SAAC,SAAD,CACEC,MAAM,qBACNrB,KAAK,WACLsB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,wCAEX,CACEC,UA1Ca,SAACC,EAAKC,GAC3B,MAAG,KAAKC,KAAKD,GAAeE,QAAQC,OAAO,wEACxCH,EAAMI,OAAO,GAAKJ,EAAMI,OAAO,GAAWF,QAAQC,OAAO,gFAErDD,QAAQG,SAChB,IA4BG,UAaE,SAAC,IAAD,OAGF,SAAC,SAAD,CACEX,MAAM,eACNrB,KAAK,WACLsB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,kCAEX,CACES,IAAK,EACLT,QAAS,+CAEX,CACEU,IAAK,GACLV,QAAS,iDAdf,UAkBE,SAAC,aAAD,OAGF,SAAC,SAAD,CACEH,MAAM,2BACNrB,KAAK,kBACLsB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,8CArEG,SAAC,GAAD,IAAEW,EAAF,EAAEA,cAAF,MAAoB,CACxCV,UADwC,SAC9BC,EAAKC,GACX,OAAGQ,EAAc,cAAcR,EAAcE,QAAQG,UAE9CH,QAAQC,OAAO,6CACzB,EALmB,GA+DlB,UAWE,SAAC,aAAD,OAGF,SAAC,SAAD,CACE3B,WAAY,CACViC,OAAQ,EACRlC,KAAM,IAHV,UAME,SAAC,IAAD,CAAQmC,KAAK,UAAUC,SAAS,SAAhC,iCAOP,C","sources":["pages/Register.js"],"sourcesContent":["import { Button, Checkbox, Form, Input } from 'antd';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useStores } from '../stores';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Wrapper=styled.div`\r\n    max-width:600px;\r\n    margin:30px auto;\r\n    box-shadow:2px 2px 4px rgba(0,0,0,0.2);\r\n    border-radius:4px;\r\n    padding:20px;\r\n`;\r\nconst Title=styled.h1`\r\n    text-align:center;\r\n`\r\n\r\nconst App = () => {\r\n  const {AuthStore}=useStores()\r\n  const history=useHistory()\r\n  // 注册成功: 输入values,先调用Auth.JS里面的setUsername函数给username传值,再login登入\r\n  const onFinish = (values) => {\r\n    console.log('Success:', values);\r\n    AuthStore.setUserName(values.username)\r\n    AuthStore.setPassword(values.password)\r\n    AuthStore.register()\r\n      .then(()=>{\r\n        console.log('注册成功,跳转到首页')\r\n        history.push('/')\r\n      }).catch(()=>{\r\n        console.log('注册失败')\r\n      })\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  const ValidateUsername=(rule,value)=>{\r\n    if(/\\W/.test(value)) return Promise.reject('只能输入字母/数字/下划线')\r\n    if(value.length<4 || value.length>10) return Promise.reject('输入内容的长度应为4-10个字符')\r\n    // 否则的话:\r\n    return Promise.resolve()\r\n  };\r\n\r\n  const validateConfirm=({getFieldValue})=>({\r\n    validator(rule,value){\r\n        if(getFieldValue('password')===value) return Promise.resolve()\r\n        // 否则:\r\n        return Promise.reject('两次密码不一致')\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Wrapper>\r\n    <Title>注册</Title>\r\n    <Form\r\n      name=\"basic\"\r\n      labelCol={{\r\n        span: 4,\r\n      }}\r\n      wrapperCol={{\r\n        span: 20,\r\n      }}\r\n      initialValues={{\r\n        remember: true,\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n      autoComplete=\"off\"\r\n    >\r\n      <Form.Item\r\n        label=\"用户名\"\r\n        name=\"username\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请输入用户名',\r\n          },\r\n          {\r\n            validator: ValidateUsername\r\n          }\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"密码\"\r\n        name=\"password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请输入密码',\r\n          },\r\n          {\r\n            min: 4,\r\n            message: '最少输入4个字符',\r\n          },\r\n          {\r\n            max: 16,\r\n            message: '最多输入16个字符',\r\n          }\r\n        ]}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"确认密码\"\r\n        name=\"confirmPassword\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请再次确认密码',\r\n          },\r\n          validateConfirm\r\n        ]}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        wrapperCol={{\r\n          offset: 4,\r\n          span: 20,\r\n        }}\r\n      >\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n    </Wrapper>\r\n  )\r\n};\r\n\r\nexport default App;"],"names":["Wrapper","styled","Title","AuthStore","useStores","history","useHistory","name","labelCol","span","wrapperCol","initialValues","remember","onFinish","values","console","log","setUserName","username","setPassword","password","register","then","push","catch","onFinishFailed","errorInfo","autoComplete","label","rules","required","message","validator","rule","value","test","Promise","reject","length","resolve","min","max","getFieldValue","offset","type","htmlType"],"sourceRoot":""}